%prod.kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVER:kafka-bootstrap.demo.svc:9092}

mp.messaging.incoming.demo.connector=smallrye-kafka
mp.messaging.incoming.demo.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.demo.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.demo.topic=${TOPIC:demo-topic}
mp.messaging.incoming.demo.group.id=${CONSUMER_GROUP:demo-group}
mp.messaging.incoming.demo.failure-strategy=ignore

# SASL Configuration for Kerberos
%krb.mp.messaging.incoming.demo.sasl.mechanism=GSSAPI
%krb.mp.messaging.incoming.demo.sasl.kerberos.service.name=${KERBEROS_SERVICE_NAME:kafka}
%krb.mp.messaging.incoming.demo.security.protocol=SASL_SSL
%krb.mp.messaging.incoming.demo.ssl.truststore.location=${TRUSTSTORE_LOCATION:/tmp/application-truststore.jks}
%krb.mp.messaging.incoming.demo.ssl.truststore.password=${TRUSTSTORE_PASSWORD:test1234}
# %krb.mp.messaging.incoming.demo.ssl.keystore.location=${KEYSTORE_LOCATION:/tmp/application-keystore.jks}
# %krb.mp.messaging.incoming.demo.ssl.keystore.password=${KEYSTORE_PASSWORD:test1234}
# %krb.mp.messaging.incoming.demo.ssl.key-password=${KEY_PASSWORD:test1234}

# JAAS Configuration for Kerberos
%krb.mp.messaging.incoming.demo.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
    useTicketCache=true \
    useKeyTab=true \
    storeKey=true \
    keyTab="${KERBEROS_KEYTAB_LOCATION:/tmp/application.keytab}" \
    principal="${KERBEROS_USERNAME:user123}@${KERBEROS_REALM:realm.test.com}";

# Business logic conf
message.processing.millis=1000